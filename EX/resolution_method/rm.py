def resolve(clause1, clause2):
    resolvents = []
    for literal1 in clause1:
        for literal2 in clause2:
            if literal1 == negate_literal(literal2):
                resolvent = set(clause1).union(set(clause2))
                resolvent.remove(literal1)
                resolvent.remove(literal2)
                resolvents.append(list(resolvent))
    return resolvents

def negate_literal(literal):
    if literal[0] == '-':
        return literal[1:]
    else:
        return '-' + literal



def simple_resolution_solver(KB, neg_alpha):
    # KB: list of known clauses
    # neg_alpha: query clause, already negated
    # returns True if proof found, False otherwise

    # initialize
    todo = [neg_alpha]
    done = KB.copy()

    # process the todo list one by one
    while todo:
        current = todo.pop()

        # combine current clause with all clauses we've already seen
        for clause in done:

            # apply resolution rule
            resolvents = resolve(current, clause)

            # handle new clauses generated by the resolution rule
            for resolvent in resolvents:

                # some important things that can happen here:
                # 1. resolvent is empty: proof found that KB->alpha!
                if not resolvent:
                    return True

                # 2. resolvent is always true: throw it away, useless clause
                elif resolvent not in done and resolvent not in todo:

                    # 3. resolvent is in the done list: not new knowledge
                    # ONLY if none of these things happen:
                    todo.append(resolvent)

        # we're done with this clause
        done.append(current)

    # loop ended without proof
    return False


if __name__ == '__main__':
    KB = [
        ['-Mythical', 'Immortal'],
        ['Mythical', 'Mortal'],
        ['Mythical', 'Mammal'],
        ['-Immortal', '-Mammal', 'Horned'],
        ['-Horned', 'Magical']
    ]
    # Test the queries
    queries = ['Mythical', 'Magical', 'Horned']
    for query in queries:
        print(f"Is the unicorn {query.lower()}? {simple_resolution_solver(KB, ['-' + query])}")





